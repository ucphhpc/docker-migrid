name: Continuous Integration - Legacy
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - master
    paths-ignore:
      - '**/README.*'
      - 'doc/**'
      - '1.gocd.yml'
      - '.gitignore'
      - '.spellcheck.yml'
      - '.spellcheckwordlist.txt'

  push:
    branches:
      - master
    paths-ignore:
      - '**/README.*'
      - 'doc/**'
      - '1.gocd.yml'
      - '.gitignore'
      - '.spellcheck.yml'
      - '.spellcheckwordlist.txt'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-run-test-legacy:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        container_os: [centos7, rocky8]
        environment_profile: [development]
    steps:
      - name: Check out repository contents
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Run tests for documentation
        run: |
          make test-doc
      - name: Build images
        run: |
          ln -s -f Dockerfile.${{ matrix.container_os }} Dockerfile
          ln -s -f docker-compose_${{ matrix.environment_profile }}.yml docker-compose.yml
          ln -s -f ${{ matrix.environment_profile }}.env .env
          make init
          echo "# NOTE: use absolute paths to current dir to get docker bind mounts to work" > ci.env
          echo "DOCKER_MIGRID_ROOT=$PWD" >> ci.env
          echo "# NOTE: force python2 at edge branch for a legacy runtime" >> ci.env
          echo "PREFER_PYTHON3=False" >> ci.env
          echo "MIG_GIT_BRANCH=edge" >> ci.env
          echo "" >> ci.env
          grep -E -v "^(DOCKER_MIGRID_ROOT|PREFER_PYTHON3|MIG_GIT_BRANCH)=" .env >> ci.env
          rm -f .env
          mv ci.env .env
          make dockerbuild
      - name: Start services
        run: |
          make up
      - name: Run tests
        run: |
          make test
      - name: Read docker compose logs
        run: |
          make logs
      - name: Read migrid logs
        run: |
          tail -n +1 state/log/*
      - name: Stop services
        run: |
          make down
